/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego.vista;

/**
 *
 * @author Miguel
 */
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import juego.controlador.BD;
import juego.controlador.ControladorJuego;
public class ClasificacionFrame extends javax.swing.JFrame implements WindowListener{

    ControladorJuego controladorJuego;
    
    /**
     * Creates new form ClasificacionFrame
     */
    public ClasificacionFrame(ControladorJuego controladorJuego) {
        initComponents();
        this.controladorJuego = controladorJuego;
        this.addWindowListener(this);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClasificacion = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LOTR - ClasificaciÃ³n");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tablaClasificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ganador", "Perdedor", "Fecha y hora del fin de la partidal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaClasificacion);
        if (tablaClasificacion.getColumnModel().getColumnCount() > 0) {
            tablaClasificacion.getColumnModel().getColumn(0).setResizable(false);
            tablaClasificacion.getColumnModel().getColumn(1).setResizable(false);
            tablaClasificacion.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try
        {
            ResultSet rst = BD.getClasificacion();
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas=rsMd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            this.tablaClasificacion.setModel(modelo);

            modelo.addColumn("Ganador");
            modelo.addColumn("Perdedor");
            modelo.addColumn("Fecha y hora del fin de la partida");
            tablaClasificacion.setEnabled(false);
            while(rst.next())
            {
                String [] fila = new String [numeroColumnas];
                for (int y=0; y<numeroColumnas; y++)
                {
                    fila [y]=rst.getString(y+1);
                }
                modelo.addRow(fila);
            }
        }
        catch (SQLException se) {
            System.out.println(se);
        }
    }//GEN-LAST:event_formWindowActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClasificacion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
        // No hace nada
    }

    @Override
    public void windowClosing(WindowEvent e) {
        controladorJuego.getInicioF().getBtnClasificacion().setSelected(false);
    }

    @Override
    public void windowClosed(WindowEvent e) {
        // No hace nada
    }

    @Override
    public void windowIconified(WindowEvent e) {
        // No hace nada
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        // No hace nada
    }

    @Override
    public void windowActivated(WindowEvent e) {
        // No hace nada
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        // No hace nada
    }
}
